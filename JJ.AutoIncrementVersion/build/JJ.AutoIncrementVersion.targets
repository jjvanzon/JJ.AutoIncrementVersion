<Project TreatAsLocalProperty="ToolTitle;Init;Content;Load;Save;Stage;ProjDir;PackDir;XmlName;PropsName;Xml;XmlAlt;PackXml;Props;DirProps;Targets;DllDev;DllProd;Dll;DllAvailable;VariablesMessage;DirPropsInnerContent;DirPropsContent;DirPropsReadOut;DirPropsError;XmlReadOut;PropsReadOut;XmlContent">
  
<!-- VARS -->

<PropertyGroup>
  <ToolTitle>JJ-AUTO-INC</ToolTitle>
       <Init>$(ToolTitle) INIT</Init>
    <Content>$(ToolTitle) CONTENT</Content>
       <Load>$(ToolTitle) LOAD</Load>
       <Save>$(ToolTitle) SAVE</Save>
      <Stage>$(ToolTitle) STAGE</Stage>
</PropertyGroup>

<PropertyGroup>
    <ProjDir>$(MSBuildProjectDirectory)/</ProjDir>
    <PackDir>$(MSBuildThisFileDirectory)</PackDir>
    <XmlName>BuildNum.xml</XmlName>
  <PropsName>JJ.AutoIncrementVersion.props</PropsName>
        <Xml>$(ProjDir)../$(XmlName)</Xml>
     <XmlAlt>$(MSBuildProjectDirectory)/../$(XmlName)</XmlAlt>
    <PackXml>$(PackDir)../$(XmlName)</PackXml>
      <Props>$(PackDir)$(PropsName)</Props>
   <DirProps>$(ProjDir)../Directory.Build.props</DirProps>
    <Targets>BeforeBuild;BuildOnlySettings;PreBuildEvent;Restore;BuildGenerateSources</Targets>
</PropertyGroup>
  
<PropertyGroup>
  <DllDev>$(MSBuildThisFileDirectory)../../JJ.AutoIncrementVersion.Tasks/bin/$(Configuration)/netstandard2.0/JJ.AutoIncrementVersion.Tasks.dll</DllDev>
  <DllProd>$(PackDir)JJ.AutoIncrementVersion.Tasks.dll</DllProd>
  <Dll Condition="Exists('$(DllProd)')">$(DllProd)</Dll>
  <Dll Condition="Exists('$(DllDev)')">$(DllDev)</Dll>
  <DllAvailable Condition="!Exists('$(Dll)')">False</DllAvailable>
  <DllAvailable Condition="Exists('$(Dll)')">True</DllAvailable>
</PropertyGroup>

<!-- IMPORT DLL -->

<Target Condition="!$(DllAvailable)" Name="JJ_AutoInc_DllMissing" BeforeTargets="$(Targets)">
  <Message Text="$(ToolTitle) ⚠️ WARNING ⚠️ DLL not found." Importance="High" />
</Target>
<UsingTask TaskName="JJ.AutoIncrementVersion.Tasks.WriteLinesNoTimestamp" AssemblyFile="$(Dll)" Condition="$(DllAvailable)" />

<!-- IMPORT BUILDNUM XML -->
  
<Import Project="$(Xml)" Condition="'$(XmlImportedjj)'=='' And Exists('$(Xml)')" />
<PropertyGroup>
  <BuildNum Condition="'$(BuildNum)'==''">0</BuildNum> <!-- Default 0 -->
</PropertyGroup>

<!-- RUN BUILD STEPS -->

<Target Name="JJ_AutoInc_BuildSteps" BeforeTargets="$(Targets)">

  <!-- DIRECTORY.BUILD.PROPS -->
    
  <!-- Auto-create directory.build.props. -->
  <!-- (Fallback working before package restore and after uninstall.) -->

  <!-- Read existing -->
  <ReadLinesFromFile File="$(DirProps)" Condition="Exists('$(DirProps)')" ContinueOnError="True" >
    <Output TaskParameter="Lines" PropertyName="DirPropsReadOut" />
  </ReadLinesFromFile>

  <!-- Build DirProps content -->
  <PropertyGroup>
    <DirPropsInnerContent>
      <PropertyGroup>
        <DirProps_Loadedjj>True</DirProps_Loadedjj>
        <DirProps_LoadTimejj>%24([System.DateTime]::Now.ToString("yyyy-MM-dd HH:mm:ss.ffffff"))</DirProps_LoadTimejj>
        <DirProps_XmlRefjj>$(XmlName)</DirProps_XmlRefjj>
        <DirProps_XmlImportedjj_Pre>%24(XmlImportedjj)</DirProps_XmlImportedjj_Pre>
      </PropertyGroup>
      <Import Project="$(XmlName)" Condition="'%24(XmlImportedjj)'=='' And Exists('$(XmlName)')"/>
      <PropertyGroup>
        <DirProps_XmlImportedjj_Post>%24(XmlImportedjj)</DirProps_XmlImportedjj_Post>
      </PropertyGroup>
    </DirPropsInnerContent>
    <DirPropsContent>
      <Project>$(DirPropsInnerContent)</Project>
    </DirPropsContent>
  </PropertyGroup>

  <!-- Warn missing content -->
  <PropertyGroup>
  <DirPropsError>Project tag should contain: $(DirPropsInnerContent)</DirPropsError>
  </PropertyGroup>
  <Error Text="$(DirPropsError)" File="$(DirProps)" Code="$(ToolTitle)"
         Condition="Exists('$(DirProps)') And !$(DirPropsReadOut.Contains($(DirPropsInnerContent)))" />

  <!-- Create directory.build.props -->
           <Message Condition="!Exists('$(DirProps)')" Text="$(Init) => &quot;$(DirProps)&quot;" Importance="High" />
  <WriteLinesToFile Condition="!Exists('$(DirProps)')" File="$(DirProps)" Lines="$(DirPropsContent)" ContinueOnError="True" />

  <!-- LOG EXISTING CONTENT -->
  
  <ReadLinesFromFile File="$(DirProps)" Condition="Exists('$(DirProps)')" ContinueOnError="True" >
    <Output TaskParameter="Lines" PropertyName="DirPropsReadOut" />
  </ReadLinesFromFile>
  <Message Text="$(Content) dir .props: '$(DirPropsReadOut)' &lt;= &quot;$(DirProps)&quot;" Importance="High" />
  
  <ReadLinesFromFile File="$(Xml)" Condition="Exists('$(Xml)')" ContinueOnError="True">
    <Output TaskParameter="Lines" PropertyName="XmlReadOut" />
  </ReadLinesFromFile>
  <Message Text="$(Content) .xml: '$(XmlReadOut)' &lt;= &quot;$(Xml)&quot;" Importance="High" />

  <ReadLinesFromFile File="$(Props)" Condition="Exists('$(Props)')" ContinueOnError="True">
    <Output TaskParameter="Lines" PropertyName="PropsReadOut" />
  </ReadLinesFromFile>
  <Message Text="$(Content) .props: '$(PropsReadOut)' &lt;= &quot;$(Props)&quot;" Importance="High" />

  <!-- INCREMENT -->
  
  <PropertyGroup>
    
    <!-- Increment -->
    <BuildNum>$([MSBuild]::Add($(BuildNum), 1))</BuildNum> 
    
    <!-- Build new content -->
    <XmlContent>
      <Project>
        <PropertyGroup>
          <BuildNum>$(BuildNum)</BuildNum>
          <DisableFastUpToDateCheck>True</DisableFastUpToDateCheck>
          <XmlImportedjj>True</XmlImportedjj>
        </PropertyGroup>
      </Project>
    </XmlContent>
  </PropertyGroup>

  <!-- Log buildnum + sources -->
  <Message Text="$(Load) $(BuildNum) &lt;= .xml + 1 ?? (&quot;$(Xml)&quot;)" Importance="High" />
  <Message Text="$(Load) $(BuildNum) &lt;= .props + 1 ?? (&quot;$(Props)&quot;)" Importance="High" />

  <!-- SAVE -->
  
  <!-- Updated xml -->
  <Message Text="$(Save) $(BuildNum) => .xml &quot;$(Xml)&quot;" Importance="High" />
  <WriteLinesToFile File="$(Xml)" Lines="$(XmlContent)" Overwrite="True" ContinueOnError="True" WriteOnlyWhenDifferent="True" />
  
  <!-- STAGE -->
  
  <!-- Stage XML to package folder, where it's referenced by the .props file for early availability in a csproj. -->
  <!--
  <Message Text="$(Stage) $(BuildNum) => .xml &quot;$(PackXml)&quot;" Importance="High" />
  <WriteLinesToFile 
    Condition="!$(DllAvailable)" 
    File="$(PackXml)" Lines="$(XmlContent)" Overwrite="True" ContinueOnError="True" WriteOnlyWhenDifferent="True" />
  <WriteLinesNoTimestamp 
    Condition="$(DllAvailable)" 
    File="$(PackXml)" Lines="$(XmlContent)" Overwrite="True" ContinueOnError="True" WriteOnlyWhenDifferent="True" />
  -->
  
  <PropertyGroup>
  <VariablesMessage>$(ToolTitle) VARS
  BuildNum = $(BuildNum)
  Targets = $(Targets)

  XmlName = $(XmlName)
  PropsName = $(PropsName)
  ProjDir = $(ProjDir)
  PackDir = $(PackDir)
  Xml = $(Xml)
  XmlAlt = $(XmlAlt)
  PackXml = $(PackXml)
  Props = $(Props)
  DirProps = $(DirProps)
  
  DllAvailable = $(DllAvailable)
  Dll = $(Dll)
  DllDev = $(DllDev)
  DllProd = $(DllProd)
  
  DirProps_Loadedjj = $(DirProps_Loadedjj)
  DirProps_LoadTimejj = $(DirProps_LoadTimejj)
  DirProps_XmlRefjj = $(DirProps_XmlRefjj)
  DirProps_XmlImportedjj_Pre = $(DirProps_XmlImportedjj_Pre)
  DirProps_XmlImportedjj_Post = $(DirProps_XmlImportedjj_Post)

  Props_Loadedjj = $(Props_Loadedjj)
  Props_LoadTimejj = $(Props_LoadTimejj)
  Props_XmlRefjj = $(Props_XmlRefjj)
  Props_XmlImportedjj_Pre = $(Props_XmlImportedjj_Pre)
  Props_XmlImportedjj_Post = $(Props_XmlImportedjj_Post)
  </VariablesMessage>
  </PropertyGroup>
  <Message Text="$(VariablesMessage)" Importance="High" />

</Target>
</Project>